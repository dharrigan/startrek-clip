#!/usr/bin/env bash

set -eo pipefail

#
# I suggest using `direnv` to manage the environment variables locally.
#
# APPLICATION can optionally be set beforehand (maybe using direnv?)
#
# Shell expansion: https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html
#
APPLICATION=${APPLICATION:-$(basename $PWD)}
GIT_SHA_SHORT=$(git rev-parse --short=7 ${GITHUB_SHA:-HEAD})
if [[ "$GITHUB_REF" =~ ^refs/tags.* ]]; then
    GIT_TAG=${GITHUB_REF#refs/tags/}
fi
FULL_IMAGE=$APPLICATION

echo "GIT_SHA_SHORT: $GIT_SHA_SHORT"
echo "FULL_IMAGE_GIT_SHA_SHORT: $FULL_IMAGE:$GIT_SHA_SHORT"
echo "FULL_IMAGE_LATEST: $FULL_IMAGE:latest"

TAG_LINE="--tag $FULL_IMAGE:latest --tag $FULL_IMAGE:$GIT_SHA_SHORT"

DOCKER_COMMAND="build --network host"

if [ "$BUILDX" = true ]; then
    docker buildx ls | grep -q worker_bee && docker buildx stop worker_bee && docker buildx rm worker_bee
    docker buildx create --use --name worker_bee --buildkitd-flags '--allow-insecure-entitlement network.host'
    BUILDX_COMMAND=$(cat <<EOL
        buildx build \
            --allow network.host \
            --load \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache,mode=max
EOL
)
DOCKER_COMMAND=$BUILDX_COMMAND
fi

DOCKER="docker $DOCKER_COMMAND -f scripts/docker/Dockerfile --build-arg APPLICATION=$APPLICATION"

 eval "$DOCKER $TAG_LINE ."

[[ "$BUILDX" = true ]] && docker buildx stop worker_bee && docker buildx rm worker_bee || exit 0
